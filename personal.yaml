esphome:
  name: poster-frame
  friendly_name: Poster Frame

esp8266:
  board: d1_mini

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "CJlQU3jbtJkGbgxqA3AxTv2BsgXlaldXYrH2pUFTtNE="

ota:
  - platform: esphome
    password: "47dd9250e16358d51b31be3e889eb908"

external_components:
  - source:
      type: git
      ref: master 
      url: https://github.com/Mechazawa/vfd-esphome
    components: [vfd_hcs_12ss59t]

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Poster-Frame Fallback Hotspot"
    # password: "ofiwS2gsk03G"
    password: !secret wifi_fallback_password
  manual_ip:
    static_ip: 172.16.3.56
    gateway: 172.16.0.1
    subnet: 255.255.0.0

captive_portal:

web_server:
  port: 80


light:
  - platform: neopixelbus
    type: GRB
    variant: WS2812X  # Works for WS2813
    pin: GPIO4  # Change if needed
    num_leds: 98
    name: "WS2813 LED Strip"
    restore_mode: RESTORE_DEFAULT_OFF
    effects:
      - addressable_rainbow:
      - addressable_scan:
      - addressable_twinkle:
      - strobe:
      - flicker:

sensor:
  - platform: wifi_signal
    name: "WiFi Signal"
    update_interval: 60s

spi:
  clk_pin: GPIO18
  mosi_pin: GPIO23

time:
  - platform: sntp
    id: sntp_time

display:
  - platform: vfd_hcs_12ss59t
    id: vfd_display
    pin_reset: 5
    pin_vdon: 4
    pin_cs: 15
    brightness: 80%
    lambda: |-
      char buf[13];
      auto t = id(sntp_time).now();
      snprintf(buf, sizeof(buf), "%02d:%02d:%02d", t.hour, t.minute, t.second);
      it.printf(0, 0, "%s", buf);
      id(vfd_display).set_brightness((uint8_t) (x * 255));
